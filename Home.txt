Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2020-04-18T12:05:17-05:00

====== Home ======
Created Saturday 18 April 2020


===== Friday 17 April 2020 üòÉÔ∏èTASK COMPLETED =====

* I executed [[TensorFlow:FFNN|FFNN]] and [[TensorFlow:CNN|CNN]] from mnist using Tendulkar lectures(NPTEL)
	[*] [[TensorFlow:FFNN:GoogleCollab|FFNN]] (Tendulkar) Google Collab using [[TensorFlow:FFNN:youtube|youtube]] , results stored in [[TensorFlow:FFNN:Github|Github Link]]
	[*] [[TensorFlow:CNN:GoogleCollab|CNN]] (Tendulkar) Google Collab  using [[TensorFlow:CNN:youtube|youtube]] , results stored in  [[TensorFlow:CNN:Github|Github Link]]
    

===== Saturday 18 April 2020üòÉÔ∏èTASK COMPLETED =====
1. [[KDM Project]] 
	* [[KDM Project:Overleaf|Paper Writing]]
	* [[KDM Project:github|github link]]     

2. [[TensorFlow:Transfer Learning|Transfer Learning]] 
	* [[TensorFlow:Transfer Learning:pretrained|pre-trained CNNs]]
	* [[TensorFlow:Transfer Learning:TF Hub|TF-Hub]]
 
3. pre-trained model (CNN + FFNN)

4. [[TensorFlow:Image Classification|Image Classification]]

===== Sunday 19 April 2020üòÉÔ∏èTASK COMPLETED =====
1. Image Classification
	* CNN ([[https://www.tensorflow.org/tutorials/images/classification|TensorFlow Official,]] [[https://github.com/sivabuddi/Deep_Learning_Fall2019/blob/master/CNN%20vs%20FFNN/CNN_Overfitting_Augmentation_Dropout/Image_Classification_tf_keras.ipynb|Personal]])
	* Overfitting (When no.of.training examples are insufficient, it leads to a problem called Overfitting. To avoid that, dropout(regularization,data augumenation(flipping))
		[*] [[https://colab.research.google.com/drive/1TzvkczNjzVkCQqJIwedcDC3GJZVzIIFG#scrollTo=fc3ggKd7hNow|Data Augmentation]] ([[https://github.com/sivabuddi/Deep_Learning_Fall2019/blob/master/CNN%20vs%20FFNN/CNN_Overfitting_Augmentation_Dropout/Image_Classification_tf_keras.ipynb|Github]])
		[*] [[https://colab.research.google.com/drive/1TzvkczNjzVkCQqJIwedcDC3GJZVzIIFG#scrollTo=fc3ggKd7hNow|Dropout]] (Regularization [[https://github.com/sivabuddi/Deep_Learning_Fall2019/blob/master/CNN%20vs%20FFNN/CNN_Overfitting_Augmentation_Dropout/Image_Classification_tf_keras.ipynb|Github]])

2. Word Embeddings
	[*] [[https://www.tensorflow.org/tutorials/text/word_embeddings|TensorFlow Official]]
	[*] [[https://github.com/sivabuddi/Deep_Learning_Fall2019/blob/master/WordEmbeddings/Word_Embeddings_Tendulkar_TensorFlow.ipynb|Github Link]] on [[https://colab.research.google.com/drive/1HUYQT9ASRROnmo9XX4lvQq2pYzubVuuX|Goolge Collab]]
      
       
3. RNN 
	* [[https://github.com/sivabuddi/Deep_Learning_Fall2019/blob/master/CNN%20vs%20FFNN/RNN/Simple_RNN.ipynb|Simple RNN]] ([[https://www.youtube.com/watch?v=KjDWcYHclOM&list=PLOzRYVm0a65cTV_t0BYj-nV8VX_Me6Es3&index=31|Youtube Link]])
	* LSTM (To avoid the problem of Vanishing Gradient Problem) addressing ([[https://www.youtube.com/watch?v=aZQw0kQ3SIA&list=PLOzRYVm0a65cTV_t0BYj-nV8VX_Me6Es3&index=32|Youtube Link,]] [[https://www.tensorflow.org/tutorials/text/text_classification_rnn|TensorFlow Official]])
	* Time series Forecasting ([[https://www.youtube.com/watch?v=i9Ci9iUMddc&list=PLOzRYVm0a65cTV_t0BYj-nV8VX_Me6Es3&index=33|Youtube Link]])
	* Text Generation with RNN's ([[https://www.youtube.com/watch?v=un_SNEBH-0E&list=PLOzRYVm0a65cTV_t0BYj-nV8VX_Me6Es3&index=34|Youtube Link]])













